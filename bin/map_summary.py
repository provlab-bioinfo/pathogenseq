#!/usr/bin/env python

# TODO nf-core: Update the script to check the samplesheet
# This script is based on the example at: https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/samplesheet/samplesheet_test_illumina_amplicon.csv

import os
import sys
import errno
import argparse
import csv

def parse_samtools_coverage_tsv_file(path_to_file, sampleid):
   
    if os.path.exists(path_to_file) == False or os.path.isfile(path_to_file) == False:
        print(f"\nERROR: coverage file {path_to_file} does not exist.\n")
        exit(1)
    if os.path.getsize(path_to_file) == 0:
        print(f"\nWarning: coverage file {path_to_file} is empty.\n")
        exit(1)

    contig_count = 0
    contig_bases = 0
    mapped_reads = 0
    mapped_bases = 0

    with open(path_to_file, "r", encoding="utf8") as fx2tab_file:
        tsv_reader = csv.DictReader(fx2tab_file, delimiter="\t")

        for tsv in tsv_reader:
            contig_count += 1
            contig_bases += int(tsv["endpos"])
            mapped_reads += int(tsv["numreads"])
            mapped_bases += int(int(tsv["covbases"]) * float(tsv["meandepth"]))
    
    depth = round(mapped_bases / contig_bases, 2)
    head = ["sampleid", "contig_count", "contig_bases", "mapped_reads", "mapped_bases", "depth"]

    print("\t".join(head), end="\n")
    print(f"{sampleid}\t{contig_count}\t{contig_bases}\t{mapped_reads}\t{mapped_bases}\t{depth}", end="\n")


def main():
    Description = "Read in samtools coverage output and generate mapping stats for the sample"
    Epilog = "Example usage: python check_samplesheet.py <tsv>"

    parser = argparse.ArgumentParser(description=Description, epilog=Epilog)

    parser.add_argument("-t", "--tsv", required=True, help="Input file: generated by samtools coverage\n")
    parser.add_argument("-s", "--sampleid", required=True, help="Sample name\n")
    
    args = parser.parse_args()

    parse_samtools_coverage_tsv_file(args.tsv, args.sampleid)

if __name__ == "__main__":
    sys.exit(main())
