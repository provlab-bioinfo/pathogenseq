/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

if(!params.skip_illumina_reads_assembly){
    process {

       
        withName: SKESA {
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/skesa" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*"
            ]

        }
        withName: STATS_SKESA {
            //ext.prefix = { "${meta.id}.contigs_stats" }
            ext.args = '-t'
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/skesa" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*",
                    enabled: false
            ]

        }
         withName: STATS_SKESA_FORMATASSEMBLYSTATS  {
            ext.prefix = { "${meta.id}.contigs_stats" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/skesa" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*"
            ]

        }
        withName: SPADES {
            ext.args = "--careful --only-assembler --cov-cutoff auto"
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/spades" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*"
            ]

        }
        withName: STATS_SPADES {
            //ext.prefix = { "${meta.id}.contigs_stats" }
            ext.args = '-t'
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/spades" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*",
                    enabled: false
            ]

        }
        withName: STATS_SPADES_FORMATASSEMBLYSTATS  {
            ext.prefix = { "${meta.id}.contigs_stats" }
            //ext.args = '-t'
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/spades" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*"
            ]

        }
        withName: UNICYCLER {
            ext.args = "--no_correct --mode conservative --keep 0 --min_fasta_length 200 "
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/unicycler" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*"
            ]

        }
        withName: STATS_UNICYCLER {
            //ext.prefix = { "${meta.id}.contig_stats" }
            ext.args = '-t'
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/unicycler" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*",
                    enabled: false
            ]


        }
        withName: STATS_UNICYCLER_FORMATASSEMBLYSTATS  {
            ext.prefix = { "${meta.id}.contigs_stats" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/unicycler" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*"
            ]

        }
        withName: MEGAHIT {
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/megahit" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*"
            ]

        }
        withName: STATS_MEGAHIT {
            //ext.prefix = { "${meta.id}.contigs_stats" }
            ext.args = '-t'
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/megahit" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*",
                    enabled: false
            ]

        }
        withName: STATS_MEGAHIT_FORMATASSEMBLYSTATS  {
            ext.prefix = { "${meta.id}.contigs_stats" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/megahit" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*"
            ]

        }
        withName: SHOVILL {
            
            // ext.args = '--assembler megahit --gsize 2800000'
            ext.args = '--assembler spades'

            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/shovill" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: "*"
            ]

        }
        withName: STATS_SHOVILL {
            //ext.prefix = { "${meta.id}.contigs_stats" }
            ext.args = '-t'
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/shovill" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*",
                    enabled: false
            ]
        }
        withName: STATS_SHOVILL_FORMATASSEMBLYSTATS  {
            ext.prefix = { "${meta.id}.contigs_stats" }
            publishDir = [
                path: { "${params.outdir}/${meta.id}/assembly/illumina/shovill" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                    pattern: "*"
            ]

        }
        
        withName: CSVTK_CONCAT_STATS_ASM{
            publishDir = [
                path: { "${params.outdir}/report" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                
            ]
        }

    }

   
}
